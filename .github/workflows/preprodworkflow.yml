name: Synapse Artifacts Deployment Pre Prod

on:
  workflow_call:
    secrets: 
      CLIENT_ID:
        required: true
        description: "Specifies the client ID."
      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "Specifies the subscription id of the deployment."
      TENANT_ID:
        required: true
        description: "Specifies the tenant id of the deployment."
      CLIENT_SECRET:
        required: true
        description: "Specifies the azure credentials for deployment."
      PP_SYNAPSE_WORKSPACE_NAME:
        required: true
        description: "Specifies the pre-prod synapse workspace name for deployment."
      PP_AZURE_RESOURCE_GROUP_NAME:
        required: true
        description: "Specifies the pre-prod synapse workspace name for deployment."
      DEV_SYNAPSE_WORKSPACE_NAME:
        required: true
        description: "Specifies the dev synapse workspace name for deployment."

jobs:
  deployment:
    name: Deployment to pre-prod
    runs-on: self-hosted
    continue-on-error: false
    environment: preprod

    steps:
      # Check Out Repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3
      
      - name: Azure Login
        id: azure_login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
          enable-AzPSSession: true
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ secrets.DEV_SYNAPSE_WORKSPACE_NAME }}
          path: ${{ github.workspace }}/code/synapse

      # # Install Required Modules
      # - name: Install Required Modules
      #   id: install_modules
      #   run: |
      #     Set-PSRepository PSGallery -InstallationPolicy Trusted
      #     Install-Module Az -ErrorAction Stop
      #   shell: pwsh
      #   working-directory: ${{ github.workspace }}/code/Scripts

        # Synapse Pre-Processing Step
      - name: Synapse Pre-Processing Step
        id: synapse_preprocessing
        run: |
          ./SynapseRolloutPreprocessing.ps1 `
            -SubscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
            -SynapseWorkspaceName "${{ secrets.PP_SYNAPSE_WORKSPACE_NAME }}" `
            -CheckPastDaysOfPipelineRuns 1
        shell: pwsh
        working-directory: ${{ github.workspace }}/code/Scripts

      # Deploy Synapse Artifacts
      - name: Deploy Synapse Artifacts
        id: deployment_synapse
        uses: azure/synapse-workspace-deployment@V1.7.0
        with:
          TargetWorkspaceName: ${{ secrets.PP_SYNAPSE_WORKSPACE_NAME }}
          TemplateFile: ${{ github.workspace }}/code/synapse/TemplateForWorkspace.json
          ParametersFile: ${{ github.workspace }}/code/synapseParameters/param.preprod.json
          # ArtifactsFolder:
          operation: "deploy"
          deployManagedPrivateEndpoint: true
          # OverrideArmParameters:
          DeleteArtifactsNotInTemplate: false
          Environment: "Azure Public"
          resourceGroup: ${{ secrets.PP_AZURE_RESOURCE_GROUP_NAME }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenantId: ${{ secrets.TENANT_ID }}          
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          managedIdentity: false

      # Synapse Post-Processing Step
      - name: Synapse Post-Processing Step
        id: synapse_postprocessing
        run: |
          ./SynapseRolloutPostprocessing.ps1 `
            -SubscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
            -SynapseWorkspaceName "${{ secrets.PP_SYNAPSE_WORKSPACE_NAME }}" `
            -TriggerNames "${{ steps.synapse_preprocessing.outputs.triggerNames }}"
        shell: pwsh
        working-directory: ${{ github.workspace }}/code/Scripts

      # Log out from Azure
      - name: 'Log out from Azure'
        run: |
          az logout